{"version":3,"sources":["assets/Metamask-logo.jpg","components/Footer.jsx","assets/meta-basket-icon.png","web3.js","Rating.js","components/Header.jsx","components/Hospitals/ReviewFetch.jsx","components/Hospitals/CreateRating.jsx","components/Hospitals/HospitalPage.jsx","components/Hospitals/Hospitals.jsx","Home.jsx","About.jsx","components/Hospitals/css/CreateHospital.jsx","App.jsx","index.js"],"names":["Footer","className","href","target","src","buy_with_meta_mask","alt","window","ethereum","request","method","err","web3","undefined","Web3","ratingAddress","ratingAbi","Header","useState","isvisible","setisvisible","eth","getAccounts","accounts","console","log","MetaMaskAccount","ratingContract","Contract","methods","getCount","call","count","getPoints","points","useEffect","loadBlockchainData","to","meta_basket_logo","type","onClick","id","name","link","map","ele","auto_closenavbar_on_mobile","temptestReviewList","time","Date","getTime","star","review","setStars","rate","extraclass","classes","push","length","key","eachstar","ReviewFetch","props","reviewList","eachreview","parseInt","toString","substr","findIndex","x","SUBMIT_STATUS","CreateReview","stars","reviewStatus","setreviewStatus","review_text","createReview","setCreateReview","each","style","cursor","action","placeholder","required","onChange","e","handleInput","value","cols","rows","handleSubmit","display","justifyContent","alignItems","role","height","width","fontSize","preventDefault","checkForm","createRating","hospital_id","send","from","alert","message","LoadingSpinner","heading","HospitalPage","useParams","reviewFetched","setreviewFetched","place","state","specialization","imageHash","counts","currenthospital","setcurrhospital","getHospital","setTimeout","halwa","class","toFixed","CreateRating","Hospitals","hospitals","sethospitals","getHospitalList","hospitallist","i","color","eachHospital","Name","Details","PID","Home","About","CreateHospital","hospitaldata","sethospitaldata","flexDirection","textAlign","maxWidth","padding","for","data","hospitalList","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2ace0dd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Metamask-logo.8fba4248.jpg\";","import React from \"react\";\nimport \"./css/footer.css\";\nimport buy_with_meta_mask from \"../assets/Metamask-logo.jpg\";\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer__container container\">\n                <div className=\"footer__row row\">\n                    <div className=\"col-sm-3 about-div\">\n                        <h4 className=\"title\">Meta Health</h4>\n                        <p>\n                            Meta Health is an online Decentralized, Blockchain\n                            Based, Secured and Trusted Rating System.\n                        </p>\n                    </div>\n\n                    <div className=\"col-sm-3 payment-div\">\n                        <h4 className=\"title\">Integrated with</h4>\n                        <ul className=\"payment\">\n                            <li>\n                                <a href=\"https://metamask.io/\" target=\"_blank\">\n                                    <div className=\"footer__buy_with_meta_mask\">\n                                        <img src={buy_with_meta_mask} alt=\"\" />\n                                    </div>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <hr />\n\n                <div className=\"row text-center\"> © 2022. Meta Health</div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/meta-basket-icon.4e9f2c01.png\";","import Web3 from \"web3\";\n\ntry {\n  window.ethereum.request({ method: \"eth_requestAccounts\" });\n} catch (err) {\n  //hadle error here\n}\nlet web3 = undefined;\nif (window.ethereum) web3 = new Web3(window.ethereum);\nexport default web3;","export const ratingAddress = \"0x5C904ffB3cdC01BD306cB5f93b38E1C7F6EB06dF\";\n\nexport const ratingAbi = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"place\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"state\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\"name\": \"specialization\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"imageHash\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"createHospital\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"hId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"_star\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_review\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"createRating\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"hId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getCount\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"hId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getHospital\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"place\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"state\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\t\t\"name\": \"specialization\",\n\t\t\t\t\t\t\"type\": \"string[]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"imageHash\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"points\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"components\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\t\t\"name\": \"time\",\n\t\t\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\t\t\t\t\"name\": \"star\",\n\t\t\t\t\t\t\t\t\"type\": \"uint8\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\t\t\"name\": \"review\",\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"internalType\": \"struct RatingContract.Rating[]\",\n\t\t\t\t\t\t\"name\": \"reviewList\",\n\t\t\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct RatingContract.Hospital\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getHospitalList\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"place\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"state\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\t\t\"name\": \"specialization\",\n\t\t\t\t\t\t\"type\": \"string[]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"imageHash\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"points\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"count\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"components\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\t\t\"name\": \"time\",\n\t\t\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\t\t\t\t\"name\": \"star\",\n\t\t\t\t\t\t\t\t\"type\": \"uint8\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\t\t\"name\": \"review\",\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"internalType\": \"struct RatingContract.Rating[]\",\n\t\t\t\t\t\t\"name\": \"reviewList\",\n\t\t\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct RatingContract.Hospital[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"hId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getPoints\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];","import React, { useEffect } from \"react\";\nimport \"./css/header.css\";\nimport meta_basket_logo from \"../assets/meta-basket-icon.png\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nimport web3 from \"../web3\";\nimport { ratingAbi, ratingAddress } from \"../Rating\";\nfunction Header() {\n    let [isvisible, setisvisible] = useState(false);\n    let navlist = [\n        { name: \"Home\", link: \"\" },\n        { name: \"Hospitals\", link: \"hospitals\" },\n        { name: \"Create Hospital\", link: \"createhospital\" },\n        { name: \"About\", link: \"about\" },\n    ];\n\n    /* ------------------------------- Just blockchain things ------------------------------- */\n    useEffect(() => {\n        loadBlockchainData();\n    }, []);\n\n    async function loadBlockchainData() {\n        let accounts;\n        try {\n            accounts = await web3.eth.getAccounts();\n        } catch (err) {\n            // this.state.ismetamaskavailable = false;\n            console.log(\"please install metamask\");\n            return;\n        }\n\n        window.MetaMaskAccount = accounts[0];\n        window.ratingContract = new web3.eth.Contract(ratingAbi, ratingAddress);\n        console.log(window.ratingContract);\n        const count = await window.ratingContract.methods.getCount(1).call();\n        const points = await window.ratingContract.methods.getPoints(1).call();\n        console.log(count, points);\n    }\n    /*---------------------------------------------------------------------------------------*/\n\n    return (\n        <>\n            <div className=\"header header-wrapper\">\n                <nav className=\"navbar navbar-expand-lg bg-light\">\n                    <div className=\"container-fluid\">\n                        <Link className=\"navbar-brand\" to=\"/\">\n                            <img\n                                src={meta_basket_logo}\n                                alt=\"Meta Basket Logo\"\n                                className=\"header__brand__img\"\n                            />\n                            Meta Health\n                        </Link>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#navbarNavAltMarkup\"\n                            aria-controls=\"navbarNavAltMarkup\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                            onClick={() => setisvisible(!isvisible)}\n                        >\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div\n                            className={\n                                (isvisible ? \"\" : \"collapse\") +\n                                \" navbar-collapse\"\n                            }\n                            id=\"bs-example-navbar-collapse-1\"\n                        >\n                            <ul className=\"navbar-nav nav_links\">\n                                {navlist.map((ele) => (\n                                    <li\n                                        key={ele.name}\n                                        className=\"nav-item\"\n                                        onClick={auto_closenavbar_on_mobile}\n                                    >\n                                        <Link\n                                            className=\"nav-link\"\n                                            to={\"/\" + ele.link}\n                                        >\n                                            {ele.name}\n                                        </Link>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n\n            <div className=\"dummy-head\"></div>\n        </>\n    );\n    /*\n     * For auto closing navbar on click\n     */\n    function auto_closenavbar_on_mobile() {\n        setisvisible(false);\n    }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { LoadingSpinner } from \"./HospitalPage\";\n\nlet temptestReviewList = [\n    {\n        time: new Date().getTime(),\n        name: \"Bips\",\n        star: \"3\",\n        review: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n    },\n    {\n        time: new Date().getTime(),\n        name: \"Abhi\",\n        star: \"4\",\n        review: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n    },\n];\nfunction ReviewFetch(props) {\n    return (\n        <div className=\"hospitaldetail__hospital-review-area__container__content__reviews__all-reviews\">\n            {props.reviewList &&\n                props.reviewList.map((eachreview) => {\n                    return (\n                        <div\n                            key={temptestReviewList.findIndex(\n                                (x) => x == eachreview\n                            )}\n                            id=\"review-area\"\n                            className=\"hospitaldetail__hospital-review-area__container__content__reviews__all-reviews__review-card\"\n                        >\n                            <div className=\"review-card__name_details\">\n                                <div className=\"review-card__name_details__image\">\n                                    <img\n                                        src={`https://avatars.dicebear.com/api/human/${eachreview.time}.svg`}\n                                    />\n                                </div>\n                                <div className=\"review-card__name_details__name\">\n                                    <h2>{eachreview.name}</h2>\n                                    <span>\n                                        {setStars(eachreview.star)}\n                                        <span className=\"review-card__name_details__name__date\">\n                                            {new Date(\n                                                parseInt(eachreview.time) * 1000\n                                            )\n                                                .toString()\n                                                .substr(0, 16)}\n                                        </span>\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"review-card__review-text\">\n                                <p>{eachreview.review}</p>\n                            </div>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n}\n\nexport function setStars(rate, extraclass = \"yellow\") {\n    if (rate >= 5) rate = 5;\n    let classes = [];\n    while (rate > 0.9) {\n        rate -= 1;\n        classes.push(\"fa-solid fa-star \" + extraclass);\n    }\n    // if (classes.length < 5 && rate * 10 > 0)\n    //   classes.push(\"fa-solid fa-star-half-stroke \" + extraclass);\n\n    while (classes.length < 5) classes.push(\"fa-regular fa-star \" + extraclass);\n    let key = 0;\n    return classes.map((eachstar) => (\n        <i\n            key={(key += 1)}\n            className={eachstar}\n            onClick={() => {\n                // Buggy :'|\n                // this.setState({\n                //   createrating: { ...this.createrating, star: key },\n                // });\n            }}\n        ></i>\n    ));\n}\n\nexport default ReviewFetch;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nlet SUBMIT_STATUS = {\n    STOPPED: 0,\n    RUNNING: 1,\n    FINISHED: 2,\n};\n\nfunction CreateReview(props) {\n    let [stars, setStars] = useState(0);\n    let [reviewStatus, setreviewStatus] = useState(SUBMIT_STATUS.STOPPED);\n    let [createReview, setCreateReview] = useState({\n        name: \"\",\n        review_text: \"\",\n    });\n    return (\n        <div className=\"hospitaldetail__hospital-review-area__container__content__create-review-box\">\n            <h4>Add a Review</h4>\n            <span>\n                <h5>\n                    Your Rating:\n                    {createStars()}\n                </h5>\n            </span>\n            <form action=\"#/\" className=\"form-contact form-review mt-3\">\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        required=\"\"\n                        onChange={(e) => handleInput(e.target.value, \"name\")}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <textarea\n                        className=\"form-control different-control w-100\"\n                        name=\"textarea\"\n                        id=\"textarea\"\n                        cols=\"30\"\n                        rows=\"5\"\n                        placeholder=\"Enter Message\"\n                        onChange={(e) =>\n                            handleInput(e.target.value, \"review-text\")\n                        }\n                    ></textarea>\n                </div>\n                {\n                    <div className=\"form-group text-center text-md-right mt-3\">\n                        <button\n                            className={\n                                \"btn btn-primary \" +\n                                (reviewStatus === SUBMIT_STATUS.FINISHED ||\n                                reviewStatus === SUBMIT_STATUS.RUNNING\n                                    ? \"disabled\"\n                                    : \"\")\n                            }\n                            onClick={(e) => handleSubmit(e)}\n                        >\n                            {reviewStatus == SUBMIT_STATUS.STOPPED && (\n                                <>\n                                    <i className=\"fa-solid fa-pen-nib\"></i>\n                                    <span> | Write my Review</span>\n                                </>\n                            )}\n\n                            {reviewStatus == SUBMIT_STATUS.RUNNING && (\n                                <>\n                                    <span\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                        }}\n                                    >\n                                        Submitting&nbsp;&nbsp;&nbsp;\n                                        <div\n                                            className=\"spinner-border\"\n                                            role=\"status\"\n                                            style={{\n                                                height: \"15px\",\n                                                width: \"15px\",\n                                                fontSize: \"10px\",\n                                            }}\n                                        >\n                                            <span className=\"visually-hidden\">\n                                                Loading...\n                                            </span>\n                                        </div>\n                                    </span>\n                                </>\n                            )}\n\n                            {reviewStatus == SUBMIT_STATUS.FINISHED && (\n                                <>\n                                    <span>Review Submitted</span>\n                                </>\n                            )}\n                        </button>\n                    </div>\n                }\n            </form>\n        </div>\n    );\n    function createStars() {\n        let s = [1, 2, 3, 4, 5];\n        return s.map((each) => (\n            <i\n                key={each}\n                className={\n                    each > stars\n                        ? \"fa-regular fa-star yellow\"\n                        : \"fa-solid fa-star yellow\"\n                }\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                    setStars(each);\n                }}\n            ></i>\n        ));\n    }\n    function handleInput(value, type) {\n        switch (type) {\n            case \"name\":\n                setCreateReview({\n                    ...createReview,\n                    name: value,\n                });\n                break;\n            case \"review-text\":\n                setCreateReview({\n                    ...createReview,\n                    review_text: value,\n                });\n                break;\n        }\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        if (checkForm() == false) return;\n\n        setreviewStatus(SUBMIT_STATUS.RUNNING);\n\n        try {\n            await window.ratingContract.methods\n                .createRating(\n                    props.hospital_id,\n                    createReview.name,\n                    stars,\n                    createReview.review_text\n                )\n                .send({\n                    from: window.MetaMaskAccount,\n                });\n        } catch (e) {\n            alert(e.message + \" Please Try again..\");\n            setreviewStatus(SUBMIT_STATUS.STOPPED);\n            return;\n        }\n        setreviewStatus(SUBMIT_STATUS.FINISHED);\n    }\n    function checkForm() {\n        if (createReview.name === \"\") {\n            alert(\"Please Enter your name\");\n            return false;\n        } else if (createReview.review_text === \"\") {\n            alert(\"No review entered\");\n            return false;\n        } else if (stars === 0) {\n            alert(\"Select Stars\");\n            return false;\n        }\n        return true;\n    }\n}\n\nexport default CreateReview;\n","import React, { useEffect } from \"react\";\nimport \"./css/HospitalPage.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport ReviewFetch from \"./ReviewFetch\";\nimport CreateRating from \"./CreateRating\";\n\nfunction HospitalPage() {\n    let { id } = useParams();\n    let [reviewFetched, setreviewFetched] = useState(false);\n    let [currenthospital, setcurrhospital] = useState({\n        name: \"\",\n        place: \"\",\n        state: \"\",\n        specialization: \"\",\n        imageHash: \"\",\n        points: \"\",\n        counts: \"\",\n        reviewList: \"\",\n    });\n\n    /* ------------------------------- Just blockchain things ------------------------------- */\n    useEffect(() => {\n        setTimeout(() => {\n            halwa();\n        }, 2000);\n    }, []);\n    async function halwa() {\n        const count = await window.ratingContract.methods\n            .getHospital(id)\n            .call();\n        let name = count[0];\n        let place = count[1];\n        let state = count[2];\n        let specialization = count[3];\n        let imageHash = \"https://ipfs.io/ipfs/\" + count[4];\n        let points = count[5];\n        let counts = count[6];\n        let reviewList = count[7];\n        let hospital_id = count[8];\n        setcurrhospital({\n            //data\n            name,\n            place,\n            state,\n            specialization,\n            imageHash,\n\n            // for reviews\n            points,\n            counts,\n            reviewList,\n            id: hospital_id,\n        });\n        setreviewFetched(true);\n        console.log(count);\n    }\n    /*---------------------------------------------------------------------------------------*/\n\n    return (\n        <>\n            <Link to=\"/\">\n                <div className=\"hospitaldetail__back-button\">\n                    <i className=\"fa-solid fa-angles-left\"></i>\n                </div>\n            </Link>\n            <section className=\"hospitaldetail__hospital-detail-area\">\n                <div className=\"hospitaldetail__hospital-detail-area__container\">\n                    <div className=\"hospitaldetail__hospital-detail-area__container__image\">\n                        <img src={currenthospital.imageHash} alt=\"\" />\n                    </div>\n                    <div className=\"hospitaldetail__hospital-detail-area__container__hospitals-text\">\n                        <div className=\"hospitaldetail__hospital-detail-area__container__hospitals-text__text\">\n                            <h2>\n                                {currenthospital.name}, {currenthospital.place},{\" \"}\n                                {currenthospital.state}\n                            </h2>\n                            <h3>\n                                Specialization: {currenthospital.specialization}\n                            </h3>\n                        </div>\n                        <div className=\"hospitaldetail__hospital-detail-area__container__hospitals-text__buy-btn\">\n                            <a\n                                className=\"btn btn-warning buy-button\"\n                                href=\"#review-area\"\n                            >\n                                <i class=\"fa-solid fa-eye\"></i> See Reviews\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"hospitaldetail__hospital-review-area\">\n                <div className=\"hospitaldetail__hospital-review-area__container\">\n                    <div className=\"hospitaldetail__hospital-review-area__container__content\">\n                        <div className=\"hospitaldetail__hospital-review-area__container__content__reviews__overallreview\">\n                            <div className=\"overallreview-container\">\n                                <h5>Overall</h5>\n                                <h4>\n                                    {reviewFetched === true\n                                        ? currenthospital.counts == 0\n                                            ? 0\n                                            : (\n                                                  currenthospital.points /\n                                                  currenthospital.counts\n                                              ).toFixed(2)\n                                        : LoadingSpinner(false)}\n                                </h4>\n                                <h6>({currenthospital.counts} Reviews)</h6>\n                            </div>\n                        </div>\n                        <ReviewFetch reviewList={currenthospital.reviewList} />\n                    </div>\n                    <CreateRating hospital_id={id} />\n                </div>\n            </section>\n        </>\n    );\n}\nexport function LoadingSpinner(heading = true) {\n    return (\n        <div className=\"hospitaldetail__loader\">\n            {heading == true && <h1>Loading &nbsp;&nbsp;&nbsp;&nbsp;</h1>}{\" \"}\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    );\n}\nexport default HospitalPage;\n","import React, { useEffect } from \"react\";\nimport \"./css/hospitals.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { LoadingSpinner } from \"./HospitalPage\";\n\nfunction Hospitals() {\n    let [hospitals, sethospitals] = useState([]);\n\n    /* ------------------------------- Just blockchain things ------------------------------- */\n    useEffect(() => {\n        setTimeout(() => {\n            halwa();\n        }, 2000);\n    }, []);\n    async function halwa() {\n        const count = await window.ratingContract.methods\n            .getHospitalList()\n            .call();\n        let hospitallist = [];\n        for (let i = 1; i < count.length; i++) {\n            let name = count[i][0];\n            let place = count[i][1];\n            let state = count[i][2];\n            let specialization = count[i][3];\n            let imageHash = \"https://ipfs.io/ipfs/\" + count[i][4];\n            let points = count[i][5];\n            let counts = count[i][6];\n            let reviewList = count[i][7];\n            let hospital_id = count[i][8];\n            hospitallist.push({\n                //data\n                name,\n                place,\n                state,\n                specialization,\n                imageHash,\n\n                // for reviews\n                points,\n                counts,\n                reviewList,\n                id: hospital_id,\n            });\n        }\n        sethospitals(hospitallist);\n        console.log(hospitallist);\n    }\n    /*---------------------------------------------------------------------------------------*/\n\n    return (\n        <div className=\"hospitals-wrapper\">\n            <section className=\"hospitals\">\n                <h1 className=\"hospitals__main-title\">\n                    <b style={{ color: \"red\" }}>\n                        <i class=\"fa-solid fa-laptop-medical\"></i> Hospitals{\" \"}\n                        <i class=\"fa-solid fa-laptop-medical\"></i>\n                    </b>\n                </h1>\n                <div className=\"hospitals__hospitals-container\">\n                    {hospitals.length === 0\n                        ? LoadingSpinner()\n                        : hospitals.map((eachHospital) => {\n                              console.log(eachHospital);\n                              return (\n                                  <Link\n                                      key={eachHospital.PID}\n                                      to={\"/hospital/\" + eachHospital.id}\n                                  >\n                                      <div className=\"hospitals__hospitals-container__card card\">\n                                          <img\n                                              src={eachHospital.imageHash}\n                                              className=\"card-img-top\"\n                                              alt={eachHospital.Name}\n                                          />\n                                          <div className=\"hospitals__hospitals-container__card__card-body card-body\">\n                                              <h5>{eachHospital.Name}</h5>\n                                              <h6>\n                                                  {eachHospital.name},{\" \"}\n                                                  {eachHospital.place},{\" \"}\n                                                  {eachHospital.state}\n                                              </h6>\n                                              <p className=\"hospitals__hospitals-container__card__card-text card-text\">\n                                                  {eachHospital.Details}\n                                              </p>\n                                              <button className=\"btn btn-primary\">\n                                                  View Details\n                                              </button>\n                                          </div>\n                                      </div>\n                                  </Link>\n                              );\n                          })}\n                </div>\n            </section>\n        </div>\n    );\n}\n\nexport default Hospitals;\n","import React from \"react\";\nimport \"./Home.css\";\n\nfunction Home() {\n    return (\n        <div>\n            <div className=\"parent_home_container\">\n                <div class=\"section home\" id=\"home\">\n                    <div class=\"home-items\">\n                        <h1>De-Centralized</h1>\n                        <h1>Hospital Rating System</h1>\n                        <h2>Find The Best Hospitals For Your Loved Ones.</h2>\n                        <h2>Get Fair Ratings Here !</h2>\n                    </div>\n                </div>\n                <div className=\"overlay\"></div>\n            </div>\n            <div className=\"home_info\">\n                <p>Our system tries to solve the problems in hospital rating and introduces a rating system that is just based on patients' reviews and is decentralized and safe from manipulations.</p>\n                <h3>Why do we require a decentralized rating system ?</h3>\n                <ul>\n                    <li>Current rating systems are centralized having complete control over the ratings database.</li>\n                    <li>Central authorities can edit / delete negative ratings to avoid their defamation.</li>\n                    <li>It can led to huge rating scams with a purpose to attract buyers.</li>\n                </ul>\n                <h3>How will Blockchain solve this problem ?</h3>\n                <ul>\n                    <li>A Blockchain network is a decentralized, distributed ledger which has rigorous Cryptographic concepts, Consensus mechanisms which makes it reliable, trustworthy and impossible to hack.</li>\n                    <li>Anything written in blockchain can’t be removed unless done legally, making rating systems consumer friendly.</li>\n                    <li>It will also ensure that our system doesn't have a single point of failure.</li>\n                </ul>\n                <h3>Feature</h3>\n                <ul>\n                    <li>Provides trustworthy ratings for hospitals.</li>\n                    <li>Ratings can't be manipulated illegally.</li>\n                    <li>User friendly and clean UI.</li>\n                </ul>                \n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n\n// https://github.com/debaonline4u/NLTM_Website\n","import React from 'react'\nimport \"./About.css\"\n\nfunction About() {\n  return (\n    <div>\n        <h1 className='title'>DEVELOPER TEAM</h1>\n        <hr />\n        <div className='about_parent_container'>\n            <div class=\"myself\">          \n                <h1>HARSH PATEL</h1>\n                <hr class=\"dots\"/>\n                <div className='about_member'>\n                <p>4th Year<br/>\n                Computer Science Engineering<br/>\n                National Institute of Technology Goa</p> \n                </div> \n            </div> \n            <div class=\"myself\">          \n                <h1>ROSHAN KUMAR</h1>\n                <hr class=\"dots\"/>\n                <div className='about_member'>\n                <p>4th Year<br/>\n                Computer Science Engineering<br/>\n                National Institute of Technology Goa</p>         \n                </div>   \n            </div> \n            <div class=\"myself\">          \n                <h1>BIPIN JADAV</h1>\n                <hr class=\"dots\"/>\n                <div className='about_member'>\n                <p>4th Year<br/>\n                Electrical and Electronics Engineering<br/>\n                National Institute of Technology Goa</p>            \n                </div>\n            </div> \n            <div class=\"myself\">          \n                <h1>ABHINAV UPADHYAY</h1>\n                <hr class=\"dots\"/>\n                <div className='about_member'>\n                <p>4th Year<br/>\n                Mechanical Engineering<br/>\n                National Institute of Technology Goa</p> \n                </div>           \n            </div> \n            \n        </div>\n    </div>\n  )\n}\n\nexport default About","import React, { useState } from \"react\";\n\nfunction CreateHospital() {\n    let [hospitaldata, sethospitaldata] = useState({\n        name: \"\",\n        place: \"\",\n        state: \"\",\n        specialization: \"\",\n    });\n    let fields = [\n        { name: \"Name\", placeholder: \"your name here\" },\n        { name: \"Place\", placeholder: \"\" },\n        { name: \"State\", placeholder: \"\" },\n        { name: \"Specialization\", placeholder: \"\" },\n    ];\n    return (\n        <section\n            class=\"create-hospital\"\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n                textAlign: \"left\",\n            }}\n        >\n            <h1>Add a new Hospital</h1>\n            <br />\n            <form\n                style={{\n                    maxWidth: \"780px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                }}\n            >\n                {fields.map((each) => (\n                    <div\n                        key={each.name}\n                        class=\"form-group\"\n                        style={{ padding: \"10px 20px\" }}\n                    >\n                        <label for=\"exampleFormControlInput1\">\n                            {each.name}\n                        </label>\n                        <input\n                            type=\"text\"\n                            class=\"form-control\"\n                            id=\"exampleFormControlInput1\"\n                            placeholder={each.placeholder}\n                            onChange={(e) => {\n                                console.log(e.target.value);\n                                handleInput(e.target.value, each.name);\n                            }}\n                        />\n                    </div>\n                ))}\n                <div className=\"file-upload\">\n                    <label for=\"exampleFormControlInput1\">Upload file</label>\n                    <br />\n                    <input type=\"file\" id=\"browse-file\" />\n                </div>\n                <div\n                    className=\"button-wrapper\"\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        padding: \"10px 20px\",\n                    }}\n                >\n                    <a className=\"btn btn-warning buy-button\">\n                        <i class=\"fa-solid fa-eye\"></i> Create Hospital\n                    </a>\n                </div>\n            </form>\n        </section>\n    );\n\n    function handleInput(data, type) {\n        console.log(type);\n        switch (type) {\n            case \"Name\":\n                sethospitaldata({ ...hospitaldata, name: data });\n                break;\n            case \"Place\":\n                sethospitaldata({ ...hospitaldata, place: data });\n                break;\n            case \"State\":\n                sethospitaldata({ ...hospitaldata, state: data });\n                break;\n            case \"Specialization\":\n                sethospitaldata({ ...hospitaldata, specialization: data });\n                break;\n        }\n        console.log(hospitaldata);\n    }\n}\n\nexport default CreateHospital;\n","import \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Hospitals from \"./components/Hospitals/Hospitals\";\nimport HospitalPage from \"./components/Hospitals/HospitalPage\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport CreateHospital from \"./components/Hospitals/css/CreateHospital\";\n\nlet hospitalList = [];\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Header />\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    <Route\n                        path=\"/createhospital\"\n                        element={<CreateHospital />}\n                    />\n                    <Route path=\"/hospitals\" element={<Hospitals />} />\n                    <Route\n                        path=\"/hospital/:id\"\n                        element={<HospitalPage hospitalList={hospitalList} />}\n                    />\n                    <Route path=\"/about\" element={<About />} />\n                </Routes>\n\n                <Footer />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}